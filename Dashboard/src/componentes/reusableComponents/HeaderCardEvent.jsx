import React from "react";

const HeaderCardEvent = ({ isEventOn, isEventFinish, estadoEvento }) => {
  if (estadoEvento === "borrador") return;
  let statusText = "";
  let icon = null;
  let colorText = "";
  let bgColor = "";

  if (isEventOn) {
    statusText = "En curso";

    icon = <></>;

    colorText = "text-violet-900";
    bgColor = "bg-violet-50";
  } else if (isEventFinish) {
    statusText = "Resultados disponibles";

    icon = (
      <svg
        width="17"
        height="16"
        viewBox="0 0 17 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g id="award-star">
          <path
            id="award-star_2"
            d="M13.7478 4.25525L13.486 3.99432C13.4351 3.94262 13.4057 3.87373 13.4057 3.8007V3.43309C13.4057 2.11444 12.3323 1.04111 11.0137 1.04111H10.6461C10.5739 1.04111 10.5032 1.01153 10.4524 0.961473L10.1915 0.699737C9.25936 -0.232425 7.7421 -0.234066 6.8083 0.699737L6.54746 0.960672C6.49659 1.01155 6.42595 1.04111 6.35374 1.04111H5.98613C4.66748 1.04111 3.59415 2.11444 3.59415 3.43309V3.8007C3.59415 3.87373 3.56551 3.94264 3.51381 3.99352L3.25198 4.25606C2.31982 5.18822 2.31982 6.7063 3.25198 7.63929L3.51381 7.90022C3.56469 7.95192 3.59415 8.02081 3.59415 8.09384V8.46145C3.59415 9.46665 4.2186 10.325 5.09825 10.6786L3.8051 15.2147C3.74109 15.4403 3.81082 15.6833 3.9856 15.8408C4.15956 15.9976 4.40737 16.0427 4.62647 15.9549L6.89785 15.0449C7.93176 14.633 9.0689 14.633 10.1012 15.0449L12.3742 15.9557C12.4488 15.9853 12.5268 16 12.6031 16C12.7533 16 12.9001 15.9458 13.015 15.8416C13.1898 15.6841 13.2595 15.4421 13.1955 15.2156L11.9024 10.6794C12.782 10.3258 13.4065 9.46745 13.4065 8.46226V8.09464C13.4065 8.02161 13.4351 7.9527 13.4868 7.90182L13.7486 7.64009C13.7486 7.64009 13.7486 7.64011 13.7486 7.63929C14.68 6.7063 14.68 5.18824 13.7478 4.25525ZM10.5575 13.901C9.23232 13.3726 7.77084 13.3717 6.43988 13.901L5.33204 14.3449L6.3275 10.8534H6.35214C6.42435 10.8534 6.49478 10.883 6.54566 10.9331L6.80669 11.1948C7.27277 11.6609 7.88493 11.8948 8.49871 11.8948C9.11085 11.8948 9.72382 11.6617 10.1907 11.1948L10.4516 10.9339C10.5024 10.883 10.5731 10.8534 10.6453 10.8534H10.6699L11.6652 14.3449L10.5575 13.901ZM12.878 6.76864L12.6164 7.03037C12.3316 7.31429 12.1756 7.69259 12.1756 8.09384V8.46145C12.1756 9.1015 11.6545 9.62259 11.0145 9.62259H10.6469C10.2506 9.62259 9.86253 9.78339 9.58271 10.064L9.32168 10.325C8.88268 10.7631 8.11795 10.7631 7.67895 10.325L7.41791 10.0632C7.1381 9.78341 6.75089 9.62259 6.35374 9.62259H5.98613C5.34609 9.62259 4.825 9.1015 4.825 8.46145V8.09384C4.825 7.69177 4.6692 7.31431 4.38446 7.02957L4.12263 6.76864C3.6705 6.31568 3.6705 5.57804 4.12263 5.1259L4.38446 4.86417C4.6692 4.58025 4.825 4.20195 4.825 3.8007V3.43309C4.825 2.79305 5.34609 2.27195 5.98613 2.27195H6.35374C6.75007 2.27195 7.1381 2.11115 7.41791 1.83052L7.67895 1.56959C8.11795 1.1314 8.88268 1.1314 9.32168 1.56959L9.58271 1.83132C9.86253 2.11113 10.2497 2.27195 10.6469 2.27195H11.0145C11.6545 2.27195 12.1756 2.79305 12.1756 3.43309V3.8007C12.1756 4.20278 12.3316 4.58023 12.6164 4.86497L12.878 5.1259C13.3301 5.57886 13.3301 6.31568 12.878 6.76864ZM10.8144 4.57449L9.76562 4.42263L9.31347 3.51182C9.1592 3.2 8.84743 3.00718 8.49951 3.00718C8.15077 3.00718 7.839 3.20082 7.68556 3.51182L7.2334 4.42263L6.18466 4.57449C5.84741 4.62372 5.5717 4.85507 5.46666 5.17919C5.36081 5.50414 5.44791 5.85295 5.69244 6.09091L6.4497 6.82613L6.27741 7.82229C6.21833 8.16529 6.35618 8.50583 6.63681 8.71097C6.91744 8.91611 7.28423 8.94396 7.5944 8.78149L8.49951 8.308L9.40542 8.78229C9.53917 8.85204 9.6835 8.88656 9.82792 8.88656C10.0158 8.88656 10.2038 8.82659 10.363 8.71007C10.6445 8.50493 10.7815 8.16445 10.7224 7.82309L10.5501 6.82443L11.3084 6.08921C11.5529 5.85124 11.639 5.50253 11.5332 5.17759C11.4273 4.85511 11.1516 4.62372 10.8144 4.57449ZM9.56388 6.06787C9.35218 6.27219 9.256 6.56682 9.30605 6.85648L9.39801 7.38897L8.91059 7.13384C8.78259 7.06656 8.64145 7.03368 8.50031 7.03368C8.35835 7.03368 8.21647 7.06736 8.08682 7.13465L7.60102 7.38897L7.69297 6.85568C7.74302 6.56602 7.64621 6.27219 7.43614 6.06787L7.0487 5.69205L7.58539 5.61492C7.87587 5.57307 8.12606 5.39179 8.2557 5.12921L8.49871 4.6401L8.74151 5.12921C8.87116 5.39179 9.12239 5.57389 9.41123 5.61492L9.94872 5.69285L9.56388 6.06787Z"
            fill="#1C694E"
          />
        </g>
      </svg>
    );

    colorText = "text-teal-800";
    bgColor = "bg-emerald-50";
  } else {
    statusText = "Pr√≥ximo";

    icon = <></>;

    colorText = "text-yellow-700";
    bgColor = "bg-orange-50";
  }

  return (
    <div
      className={`self-stretch absolute top-0 px-[72px] py-[11px] ${bgColor} rounded-tl-[10px] w-full rounded-tr-[10px] justify-center items-center gap-2 inline-flex`}
    >
      {icon}
      <p
        className={`${colorText} text-sm font-bold font-lato leading-tight`}
      >
        {statusText}
      </p>
    </div>
  );
};

export default HeaderCardEvent;
